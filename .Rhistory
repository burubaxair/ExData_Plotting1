2+2
?caret
?rpart
filehash
?filehash
getwd()
ls()
dir()
source("mycode.R")
ls()
source("mycode.R")
ls()
source("mycode.R")
ls()
myfun(4:10)
myfun2(4:10)
myfun2(4:2:10)
R.version.string
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
?InstallCourses
?boxplot
?text
?points
library(swirl)
swirl()
?InstallCourses
install_from_swirl("Getting and Cleaning Data", dev = FALSE, mirror = "github")
install_from_swirl("Getting and Cleaning Data", dev = FALSE, mirror = "bitbucket")
install_from_swirl("Regression Models")
install_from_swirl("R Programming")
library(swirl)
install_from_swirl("R Programming")
install_from_swirl("Getting and Cleaning Data")
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("RMySQL")
options(internet.info=0)
install.packages("RMySQL")
install.packages("RMySQL")
pexp(6,1/5,lower.tail = FALSE)
mn <-2
s <-sqrt(3+5)
n<-8
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
2^3
sp <- sqrt( ((nx-1)*sx^2+(ny-1)*sy^2)/(nx+ny-2)  )
nx <- 8
ny <- 8
mn <- 2
sx <- 3
sy <- 5
sp <- sqrt( ((nx-1)*sx^2+(ny-1)*sy^2)/(nx+ny-2)  )
mn + c(-1, 1) * qt(.975, nx+ny-2) * sp * sqrt(1/nx + 1/ny)
?qt
nx <- 8
ny <- 8
mn <- 2
sx <- 3
sy <- 5
sp <- sqrt( ((nx-1)*sx^2+(ny-1)*sy^2)/(nx+ny-2)  )
mn + c(-1, 1) * qt(.975, nx+ny-2,log=TRUE) * sp * sqrt(1/nx + 1/ny)
nx <- 8
ny <- 8
mn <- 2
sx <- 3
sy <- 5
sp <- sqrt( ((nx-1)*sx^2+(ny-1)*sy^2)/(nx+ny-2)  )
mn + c(-1, 1) * qt(.975, nx+ny-2) * sp * sqrt(1/nx + 1/ny)
nx <- 8
ny <- 8
mn <- 2
sx <- 3
sy <- 5
sp <- sqrt( ((nx-1)*sx+(ny-1)*sy)/(nx+ny-2)  )
mn + c(-1, 1) * qt(.975, nx+ny-2) * sp * sqrt(1/nx + 1/ny)
sp
4.1447867-(-0.1447867
)
qt(.975, nx+ny-2) * sp * sqrt(1/nx + 1/ny)
qt(.995, nx+ny-2) * sp * sqrt(1/nx + 1/ny)
?qqplot
require(graphics)
y <- rt(200, df = 5)
qqnorm(y); qqline(y, col = 2)
qqplot(y, rt(300, df = 5))
?rt
x<-rexp(100, rate = 1)
x
y<-runif(100, min = 0, max = 1)
qqplot(x,y)
qqplot(y,x)
qt(.975, nx+ny-2)
mn <- 1100
s <- 30
n <- 9
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
mn <- -2
s <- 2.6
n <- 9
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
n <- 9
qt(.975, n-1) / sqrt(n)
n <- 9
2/(qt(.975, n-1) / sqrt(n))
mn <- -2
s <- 2.5
n <- 9
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
mn <- -2
s <- 2.7
n <- 9
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
nx <- 10
ny <- 10
mn <- -2
sx <- 0.6
sy <- 0.68
sp <- sqrt( ((nx-1)*sx^2+(ny-1)*sy^2)/(nx+ny-2)  )
mn + c(-1, 1) * qt(.975, nx+ny-2) * sp * sqrt(1/nx + 1/ny)
x<-rexp(100, rate = 1)
y<-rnorm(100, mean = 0, sd = 1)
qqplot(x,y)
temp <- expand.grid(c(1, 3), c(1, 3))
temp
table(apply(temp, 1, mean))
?runif
x<-runif(10000, min = 0, max = 1)
y<-log(x)
exp(mean(y))
exp(log(0.5))
exp(0.5)
exp(1)
1/exp(1)
x<-rlnorm(10000, meanlog = 5, sdlog = 1)
y<-log(x)
median(y)
exp(1/2)
mean(y)
?mean
mean(x)
exp(5.5)
prod(x)^(1/10000)
prod(x^(1/10000))
exp(5)
source('~/ExData_Plotting1/plot1.R')
getwd()
cd ExData_Plotting1
setwd("/home/vlad/ExData_Plotting1")
getwd()
source('~/ExData_Plotting1/plot1.R')
